import com.android.build.gradle.internal.dsl.SigningConfig

buildscript {
    ext.nav_version = "2.7.6"
    ext.protobuf_version = '0.9.0'
    ext.refine_version = '4.4.0'
    ext.room_version = "2.6.1"
    ext.compile_sdk = 34
    ext.min_sdk = 29
    ext.target_sdk = 34
    dependencies {
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobuf_version"
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1"
    }
}

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.1.1' apply false
    id 'com.android.library' version '8.1.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.10' apply false
    id 'com.google.devtools.ksp' version '1.9.10-1.0.13' apply false
    id 'dev.rikka.tools.refine' version "$refine_version" apply false
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false
}

def getKeystoreProperties() {
    def properties = new Properties()
    properties.setProperty("keyAlias", "")
    properties.setProperty("keyPassword", "")
    properties.setProperty("storeFile", "")
    properties.setProperty("storePassword", "")
    try {
        def propertiesFile = rootProject.file("keystore.properties")
        if (propertiesFile.exists()) {
            properties.load(new FileInputStream(propertiesFile))
        }
    } catch (Exception ignored) {
        properties = null
        println "Unable to read keystore"
    }
    return properties
}

ext {
    signingConfigs = {
        release {
            def keystore = getKeystoreProperties()
            if (keystore != null) {
                storeFile file(keystore.getProperty("storeFile"))
                storePassword keystore.getProperty("storePassword")
                keyAlias keystore.getProperty("keyAlias")
                keyPassword keystore.getProperty("keyPassword")
            }
        }
    }
    outputFileDir = "../../../../../apks"
}

tasks.register('clean', Delete) {
    delete "apks"
}